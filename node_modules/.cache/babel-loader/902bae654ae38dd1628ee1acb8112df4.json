{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/Desktop/react-shoppie-app/src/Components/CollectionItem/CollectionItem.jsx\";\nimport React from 'react';\nimport './CollectionItem.scss';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { addItem } from '.../../Redux/cart/cart-actions';\n\nconst CollectionItem = ({\n  iitem,\n  addItem\n}) => {\n  const {\n    id,\n    name,\n    price,\n    imageUrl\n  } = item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, price)), /*#__PURE__*/React.createElement(CustomButton, {\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/home/abdullah/Desktop/react-shoppie-app/src/Components/CollectionItem/CollectionItem.jsx"],"names":["React","connect","CustomButton","addItem","CollectionItem","iitem","id","name","price","imageUrl","item","backgroundImage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,OAAR,QAAsB,gCAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAwB;AAC3C,QAAM;AAACG,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BC,IAApC;AACF,sBACM;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAG,OAAMF,QAAS;AAD5B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADF,eAEE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,KAAzB,CAFF,CAPF,eAWE,oBAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADN;AAcM,CAhBR;;AAkBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,OAAO,EAAEO,IAAI,IAAIG,QAAQ,CAACV,OAAO,CAACO,IAAD,CAAR;AADa,CAAL,CAAnC;;AAIA,eAAeT,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAmCR,cAAnC,CAAf","sourcesContent":["import React from 'react';\nimport './CollectionItem.scss';\nimport {connect} from 'react-redux'\n\nimport CustomButton from '../CustomButton/CustomButton'\nimport {addItem} from '.../../Redux/cart/cart-actions'\n\nconst CollectionItem = ({ iitem, addItem }) => {\n    const {id, name, price, imageUrl} = item;\n  return(\n        <div className='collection-item'>\n          <div\n            className='image'\n            style={{\n              backgroundImage: `url(${imageUrl})`\n            }}\n          />\n          <div className='collection-footer'>\n            <span className='name'>{name}</span>\n            <span className='price'>{price}</span>\n          </div>\n          <CustomButton inverted>Add to cart</CustomButton>\n        </div>\n      )}\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps )(CollectionItem);\n"]},"metadata":{},"sourceType":"module"}